{"ast":null,"code":"var _jsxFileName = \"/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/components/DndBox.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { DragSource } from \"react-dnd\";\nimport dnDItemTypes from \"~/data/dnDItemTypes\";\nimport \"./dnd_box.less\";\n\nconst DndBox = ({\n  hideSourceOnDrag,\n  left,\n  top,\n  connectDragSource,\n  isDragging,\n  children\n}) => {\n  if (isDragging && hideSourceOnDrag) {\n    return null;\n  }\n\n  return connectDragSource(__jsx(\"div\", {\n    className: \"dnd_box\",\n    style: {\n      left,\n      top\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, children));\n};\n\nexport default DragSource(dnDItemTypes.BOX, {\n  beginDrag(props) {\n    const {\n      id,\n      left,\n      top\n    } = props;\n    return {\n      id,\n      left,\n      top\n    };\n  }\n\n}, (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging()\n}))(DndBox);","map":{"version":3,"sources":["/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/components/DndBox.tsx"],"names":["React","DragSource","dnDItemTypes","DndBox","hideSourceOnDrag","left","top","connectDragSource","isDragging","children","BOX","beginDrag","props","id","connect","monitor","dragSource"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAO,gBAAP;;AAaA,MAAMC,MAA0B,GAAG,CAAC;AAClCC,EAAAA,gBADkC;AAElCC,EAAAA,IAFkC;AAGlCC,EAAAA,GAHkC;AAIlCC,EAAAA,iBAJkC;AAKlCC,EAAAA,UALkC;AAMlCC,EAAAA;AANkC,CAAD,KAO7B;AACJ,MAAID,UAAU,IAAIJ,gBAAlB,EAAoC;AAClC,WAAO,IAAP;AACD;;AAED,SAAOG,iBAAiB,CACtB;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,KAAK,EAAE;AAAEF,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,QADH,CADsB,CAAxB;AAKD,CAjBD;;AAmBA,eAAeR,UAAU,CACvBC,YAAY,CAACQ,GADU,EAEvB;AACEC,EAAAA,SAAS,CAACC,KAAD,EAAkB;AACzB,UAAM;AAAEC,MAAAA,EAAF;AAAMR,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,QAAoBM,KAA1B;AACA,WAAO;AAAEC,MAAAA,EAAF;AAAMR,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,KAAP;AACD;;AAJH,CAFuB,EAQvB,CAACQ,OAAD,EAAUC,OAAV,MAAuB;AACrBR,EAAAA,iBAAiB,EAAEO,OAAO,CAACE,UAAR,EADE;AAErBR,EAAAA,UAAU,EAAEO,OAAO,CAACP,UAAR;AAFS,CAAvB,CARuB,CAAV,CAYbL,MAZa,CAAf","sourcesContent":["import React from \"react\";\nimport { ConnectDragSource } from \"react-dnd\";\nimport { DragSource } from \"react-dnd\";\nimport dnDItemTypes from \"~/data/dnDItemTypes\";\nimport \"./dnd_box.less\";\n\nexport interface BoxProps {\n  id: any;\n  left: number;\n  top: number;\n  hideSourceOnDrag?: boolean;\n\n  // Collected Props\n  connectDragSource: ConnectDragSource;\n  isDragging?: boolean;\n}\n\nconst DndBox: React.FC<BoxProps> = ({\n  hideSourceOnDrag,\n  left,\n  top,\n  connectDragSource,\n  isDragging,\n  children\n}) => {\n  if (isDragging && hideSourceOnDrag) {\n    return null;\n  }\n\n  return connectDragSource(\n    <div className=\"dnd_box\" style={{ left, top }}>\n      {children}\n    </div>\n  );\n};\n\nexport default DragSource(\n  dnDItemTypes.BOX,\n  {\n    beginDrag(props: BoxProps) {\n      const { id, left, top } = props;\n      return { id, left, top };\n    }\n  },\n  (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  })\n)(DndBox);\n"]},"metadata":{},"sourceType":"module"}