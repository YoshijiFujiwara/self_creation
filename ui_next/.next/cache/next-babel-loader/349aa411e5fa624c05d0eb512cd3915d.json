{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nvar _jsxFileName = \"/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport MaterialButton from \"@material-ui/core/Button\";\nimport update from \"immutability-helper\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\nimport DnDContainer from \"~/components/DnDContainer\";\nimport LeftSider from \"~/components/LeftSider\";\nimport RightSider from \"~/components/RightSider\";\nimport componentGroups from \"~/data/materialComponents\";\nimport DefaultLayout from \"~/layouts/default\";\nvar SubMenu = _Menu.SubMenu;\nvar Sider = _Layout.Sider;\n\nvar IndexPage = function IndexPage() {\n  var _useState = useState({\n    a: {\n      top: 20,\n      left: 80,\n      jsx: __jsx(MaterialButton, {\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"button1\"),\n      componentName: \"Button\"\n    },\n    b: {\n      top: 180,\n      left: 20,\n      jsx: __jsx(MaterialButton, {\n        variant: \"contained\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"button2\"),\n      componentName: \"Button\"\n    }\n  }),\n      boxes = _useState[0],\n      setBoxes = _useState[1];\n\n  var _useState2 = useState(\"Button\"),\n      selectedComponentTitle = _useState2[0],\n      setComponent = _useState2[1];\n\n  var makeId = function makeId(length) {\n    var result = \"\";\n    var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n  };\n\n  var addDnDBox = function addDnDBox() {\n    var key = makeId(5);\n    setBoxes(update(boxes, {\n      $merge: _defineProperty({}, key, {\n        top: 180,\n        left: 20,\n        jsx: __jsx(MaterialButton, {\n          variant: \"contained\",\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"\\u307B\\u3052\\u307B\\u3052\"),\n        componentName: \"Button\"\n      })\n    }));\n  };\n\n  return __jsx(DefaultLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(_Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(LeftSider, {\n    subMenus: componentGroups,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), __jsx(DndProvider, {\n    backend: Backend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(DnDContainer, {\n    hideSourceOnDrag: true,\n    boxes: boxes,\n    setBoxes: setBoxes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), __jsx(RightSider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/pages/index.tsx"],"names":["MaterialButton","update","React","useState","DndProvider","Backend","DnDContainer","LeftSider","RightSider","componentGroups","DefaultLayout","SubMenu","Sider","IndexPage","a","top","left","jsx","componentName","b","boxes","setBoxes","selectedComponentTitle","setComponent","makeId","length","result","characters","charactersLength","i","charAt","Math","floor","random","addDnDBox","key","$merge"],"mappings":"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","sourcesContent":["import MaterialButton from \"@material-ui/core/Button\";\nimport { Layout, Menu, Icon } from \"antd\";\nimport update from \"immutability-helper\";\nimport { NextPage } from \"next\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { Dispatch } from \"react\";\nimport { SetStateAction } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\nimport DnDContainer from \"~/components/DnDContainer\";\nimport LeftSider from \"~/components/LeftSider\";\nimport RightSider from \"~/components/RightSider\";\nimport componentGroups from \"~/data/materialComponents\";\nimport { TComponent } from \"~/interfaces/menu\";\nimport DefaultLayout from \"~/layouts/default\";\n\nconst { SubMenu } = Menu;\nconst { Sider } = Layout;\n\nexport type TBox = {\n  top: number;\n  left: number;\n  jsx: JSX.Element;\n  componentName: TComponent[\"title\"];\n};\nexport type TBoxes = {\n  [key: string]: TBox;\n};\n\nexport type IndexPageState = {\n  boxes: TBoxes;\n};\n\nconst IndexPage: NextPage = () => {\n  const [boxes, setBoxes]: [\n    TBoxes,\n    Dispatch<SetStateAction<TBoxes>>\n  ] = useState<TBoxes>({\n    a: {\n      top: 20,\n      left: 80,\n      jsx: (\n        <MaterialButton variant=\"contained\" color=\"primary\">\n          button1\n        </MaterialButton>\n      ),\n      componentName: \"Button\"\n    },\n    b: {\n      top: 180,\n      left: 20,\n      jsx: (\n        <MaterialButton variant=\"contained\" color=\"secondary\">\n          button2\n        </MaterialButton>\n      ),\n      componentName: \"Button\"\n    }\n  });\n\n  const [selectedComponentTitle, setComponent]: [\n    string,\n    Dispatch<SetStateAction<string>>\n  ] = useState<string>(\"Button\");\n\n  const makeId = (length: number): string => {\n    let result = \"\";\n    const characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n\n  const addDnDBox = (): void => {\n    const key = makeId(5);\n    setBoxes(\n      update(boxes, {\n        $merge: {\n          [key]: {\n            top: 180,\n            left: 20,\n            jsx: <MaterialButton variant=\"contained\" color=\"secondary\">\n              ほげほげ\n            </MaterialButton>,\n            componentName: \"Button\"\n          }\n        }\n      })\n    );\n  };\n\n  return (\n    <DefaultLayout>\n      <Layout>\n        <LeftSider subMenus={componentGroups} />\n        <DndProvider backend={Backend}>\n          <DnDContainer\n            hideSourceOnDrag={true}\n            boxes={boxes}\n            setBoxes={setBoxes}\n          />\n        </DndProvider>\n        <RightSider />\n      </Layout>\n    </DefaultLayout>\n  );\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}