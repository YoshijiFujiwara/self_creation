{"ast":null,"code":"export const makeRandomId = length => {\n  let result = \"\";\n  const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n};\nexport const mapToComponentProps = props => {\n  return props.reduce((accumulator, currentValue) => {\n    if (currentValue.name === \"children\") return accumulator;\n    accumulator[currentValue.name] = currentValue.default;\n    return accumulator;\n  }, {});\n};","map":{"version":3,"sources":["/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/utils.ts"],"names":["makeRandomId","length","result","characters","charactersLength","i","charAt","Math","floor","random","mapToComponentProps","props","reduce","accumulator","currentValue","name","default"],"mappings":"AAEA,OAAO,MAAMA,YAAY,GAAIC,MAAD,IAA4B;AACtD,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMC,UAAU,GACd,gEADF;AAEA,QAAMC,gBAAgB,GAAGD,UAAU,CAACF,MAApC;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAApB,EAA4BI,CAAC,EAA7B,EAAiC;AAC/BH,IAAAA,MAAM,IAAIC,UAAU,CAACG,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,gBAA3B,CAAlB,CAAV;AACD;;AACD,SAAOF,MAAP;AACD,CATM;AAWP,OAAO,MAAMQ,mBAAmB,GAAIC,KAAD,IAAqC;AACtE,SAAOA,KAAK,CAACC,MAAN,CACL,CAACC,WAAD,EAAmCC,YAAnC,KAA2D;AACzD,QAAIA,YAAY,CAACC,IAAb,KAAsB,UAA1B,EAAsC,OAAOF,WAAP;AACtCA,IAAAA,WAAW,CAACC,YAAY,CAACC,IAAd,CAAX,GAAiCD,YAAY,CAACE,OAA9C;AACA,WAAOH,WAAP;AACD,GALI,EAML,EANK,CAAP;AAQD,CATM","sourcesContent":["import {TComponentProps, TProp} from \"~/interfaces/material_components\";\n\nexport const makeRandomId = (length: number): string => {\n  let result = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const mapToComponentProps = (props: TProp[]): TComponentProps => {\n  return props.reduce(\n    (accumulator: Record<string, any>, currentValue: TProp) => {\n      if (currentValue.name === \"children\") return accumulator;\n      accumulator[currentValue.name] = currentValue.default;\n      return accumulator;\n    },\n    {}\n  );\n};\n"]},"metadata":{},"sourceType":"module"}