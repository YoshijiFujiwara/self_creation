{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/components/DndBox.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { DragSource } from \"react-dnd\";\nimport dnDItemTypes from '~/data/dnDItemTypes';\nvar style = {\n  position: \"absolute\",\n  border: \"1px dashed gray\",\n  backgroundColor: \"white\",\n  padding: \"0.5rem 1rem\",\n  cursor: \"move\"\n};\n\nvar DndBox = function DndBox(_ref) {\n  var hideSourceOnDrag = _ref.hideSourceOnDrag,\n      left = _ref.left,\n      top = _ref.top,\n      connectDragSource = _ref.connectDragSource,\n      isDragging = _ref.isDragging,\n      children = _ref.children;\n\n  if (isDragging && hideSourceOnDrag) {\n    return null;\n  }\n\n  return connectDragSource(__jsx(\"div\", {\n    style: _objectSpread({}, style, {\n      left: left,\n      top: top\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, children));\n};\n\nexport default DragSource(dnDItemTypes.BOX, {\n  beginDrag: function beginDrag(props) {\n    var id = props.id,\n        left = props.left,\n        top = props.top;\n    return {\n      id: id,\n      left: left,\n      top: top\n    };\n  }\n}, function (connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n})(DndBox);","map":{"version":3,"sources":["/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/components/DndBox.tsx"],"names":["React","DragSource","dnDItemTypes","style","position","border","backgroundColor","padding","cursor","DndBox","hideSourceOnDrag","left","top","connectDragSource","isDragging","children","BOX","beginDrag","props","id","connect","monitor","dragSource"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,IAAMC,KAA0B,GAAG;AACjCC,EAAAA,QAAQ,EAAE,UADuB;AAEjCC,EAAAA,MAAM,EAAE,iBAFyB;AAGjCC,EAAAA,eAAe,EAAE,OAHgB;AAIjCC,EAAAA,OAAO,EAAE,aAJwB;AAKjCC,EAAAA,MAAM,EAAE;AALyB,CAAnC;;AAmBA,IAAMC,MAA0B,GAAG,SAA7BA,MAA6B,OAO7B;AAAA,MANJC,gBAMI,QANJA,gBAMI;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,GAII,QAJJA,GAII;AAAA,MAHJC,iBAGI,QAHJA,iBAGI;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADJC,QACI,QADJA,QACI;;AACJ,MAAID,UAAU,IAAIJ,gBAAlB,EAAoC;AAClC,WAAO,IAAP;AACD;;AAED,SAAOG,iBAAiB,CACtB;AAAK,IAAA,KAAK,oBAAOV,KAAP;AAAcQ,MAAAA,IAAI,EAAJA,IAAd;AAAoBC,MAAAA,GAAG,EAAHA;AAApB,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCG,QAAtC,CADsB,CAAxB;AAGD,CAfD;;AAiBA,eAAed,UAAU,CACvBC,YAAY,CAACc,GADU,EAEvB;AACEC,EAAAA,SADF,qBACYC,KADZ,EAC6B;AAAA,QACjBC,EADiB,GACCD,KADD,CACjBC,EADiB;AAAA,QACbR,IADa,GACCO,KADD,CACbP,IADa;AAAA,QACPC,GADO,GACCM,KADD,CACPN,GADO;AAEzB,WAAO;AAAEO,MAAAA,EAAE,EAAFA,EAAF;AAAMR,MAAAA,IAAI,EAAJA,IAAN;AAAYC,MAAAA,GAAG,EAAHA;AAAZ,KAAP;AACD;AAJH,CAFuB,EAQvB,UAACQ,OAAD,EAAUC,OAAV;AAAA,SAAuB;AACrBR,IAAAA,iBAAiB,EAAEO,OAAO,CAACE,UAAR,EADE;AAErBR,IAAAA,UAAU,EAAEO,OAAO,CAACP,UAAR;AAFS,GAAvB;AAAA,CARuB,CAAV,CAYbL,MAZa,CAAf","sourcesContent":["import React from \"react\";\nimport { ConnectDragSource } from \"react-dnd\";\nimport { DragSource } from \"react-dnd\";\nimport dnDItemTypes from '~/data/dnDItemTypes';\n\nconst style: React.CSSProperties = {\n  position: \"absolute\",\n  border: \"1px dashed gray\",\n  backgroundColor: \"white\",\n  padding: \"0.5rem 1rem\",\n  cursor: \"move\"\n};\n\nexport interface BoxProps {\n  id: any;\n  left: number;\n  top: number;\n  hideSourceOnDrag?: boolean;\n\n  // Collected Props\n  connectDragSource: ConnectDragSource;\n  isDragging?: boolean;\n}\n\nconst DndBox: React.FC<BoxProps> = ({\n  hideSourceOnDrag,\n  left,\n  top,\n  connectDragSource,\n  isDragging,\n  children\n}) => {\n  if (isDragging && hideSourceOnDrag) {\n    return null;\n  }\n\n  return connectDragSource(\n    <div style={{ ...style, left, top }}>{children}</div>\n  );\n};\n\nexport default DragSource(\n  dnDItemTypes.BOX,\n  {\n    beginDrag(props: BoxProps) {\n      const { id, left, top } = props;\n      return { id, left, top };\n    }\n  },\n  (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  })\n)(DndBox);\n"]},"metadata":{},"sourceType":"module"}