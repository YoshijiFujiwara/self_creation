{"ast":null,"code":"import \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nvar _jsxFileName = \"/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport DefaultLayout from \"~/layouts/default\";\nimport subMenus from \"~/data/subMenus\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\nimport DnDContainer from \"~/components/DnDContainer\";\nimport update from \"immutability-helper\";\nconst {\n  SubMenu\n} = _Menu;\nconst {\n  Sider\n} = _Layout;\n\nconst IndexPage = () => {\n  const {\n    0: boxes,\n    1: setBoxes\n  } = useState({\n    a: {\n      top: 20,\n      left: 80,\n      width: 100,\n      height: 50,\n      title: \"Drag me around\",\n      jsx: __jsx(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"hogehoeg\")\n    },\n    b: {\n      top: 180,\n      left: 20,\n      width: 130,\n      height: 50,\n      title: \"Drag me too\",\n      jsx: __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"fugafuga\")\n    }\n  });\n\n  const makeId = length => {\n    let result = \"\";\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const charactersLength = characters.length;\n\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n  };\n\n  const addDnDBox = title => {\n    const key = makeId(5);\n    setBoxes(update(boxes, {\n      $merge: {\n        [key]: {\n          top: 180,\n          left: 20,\n          width: 120,\n          height: 30,\n          title,\n          jsx: __jsx(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, \"hogehoge\")\n        }\n      }\n    }));\n  };\n\n  return __jsx(DefaultLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(_Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(Sider, {\n    width: 200,\n    style: {\n      background: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(_Menu, {\n    mode: \"inline\",\n    defaultSelectedKeys: [\"1\"],\n    defaultOpenKeys: [\"sub1\"],\n    style: {\n      height: \"100%\",\n      borderRight: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, subMenus.map((subMenu, subMenuIndex) => __jsx(SubMenu, {\n    key: subMenuIndex,\n    title: __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(_Icon, {\n      type: subMenu.iconType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), subMenu.title),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, subMenu.menuItems.map((item, itemIndex) => __jsx(_Menu.Item, {\n    key: `${subMenuIndex}-${itemIndex}`,\n    onClick: () => addDnDBox(item.title),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, item.title)))))), __jsx(DndProvider, {\n    backend: Backend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(DnDContainer, {\n    hideSourceOnDrag: true,\n    boxes: boxes,\n    setBoxes: setBoxes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }))));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/pages/index.tsx"],"names":["React","useState","DefaultLayout","subMenus","DndProvider","Backend","DnDContainer","update","SubMenu","Sider","IndexPage","boxes","setBoxes","a","top","left","width","height","title","jsx","b","makeId","length","result","characters","charactersLength","i","charAt","Math","floor","random","addDnDBox","key","$merge","background","borderRight","map","subMenu","subMenuIndex","iconType","menuItems","item","itemIndex"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,aAAP,MAA0B,mBAA1B;AAGA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,MAAM;AAAEC,EAAAA;AAAF,SAAN;AACA,MAAM;AAAEC,EAAAA;AAAF,WAAN;;AAiBA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAE/B;AACDY,IAAAA,CAAC,EAAE;AACDC,MAAAA,GAAG,EAAE,EADJ;AAEDC,MAAAA,IAAI,EAAE,EAFL;AAGDC,MAAAA,KAAK,EAAE,GAHN;AAIDC,MAAAA,MAAM,EAAE,EAJP;AAKDC,MAAAA,KAAK,EAAE,gBALN;AAMDC,MAAAA,GAAG,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ,KADF;AASDC,IAAAA,CAAC,EAAE;AACDN,MAAAA,GAAG,EAAE,GADJ;AAEDC,MAAAA,IAAI,EAAE,EAFL;AAGDC,MAAAA,KAAK,EAAE,GAHN;AAIDC,MAAAA,MAAM,EAAE,EAJP;AAKDC,MAAAA,KAAK,EAAE,aALN;AAMDC,MAAAA,GAAG,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AATF,GAF+B,CAAlC;;AAqBA,QAAME,MAAM,GAAIC,MAAD,IAA4B;AACzC,QAAIC,MAAM,GAAG,EAAb;AACA,UAAMC,UAAU,GACd,gEADF;AAEA,UAAMC,gBAAgB,GAAGD,UAAU,CAACF,MAApC;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAApB,EAA4BI,CAAC,EAA7B,EAAiC;AAC/BH,MAAAA,MAAM,IAAIC,UAAU,CAACG,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,gBAA3B,CAAlB,CAAV;AACD;;AACD,WAAOF,MAAP;AACD,GATD;;AAWA,QAAMQ,SAAS,GAAIb,KAAD,IAAyB;AACzC,UAAMc,GAAG,GAAGX,MAAM,CAAC,CAAD,CAAlB;AACAT,IAAAA,QAAQ,CACNL,MAAM,CAACI,KAAD,EAAQ;AACZsB,MAAAA,MAAM,EAAE;AACN,SAACD,GAAD,GAAO;AACLlB,UAAAA,GAAG,EAAE,GADA;AAELC,UAAAA,IAAI,EAAE,EAFD;AAGLC,UAAAA,KAAK,EAAE,GAHF;AAILC,UAAAA,MAAM,EAAE,EAJH;AAKLC,UAAAA,KALK;AAMLC,UAAAA,GAAG,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AADD;AADI,KAAR,CADA,CAAR;AAcD,GAhBD;;AAkBA,SACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE,GAAd;AAAmB,IAAA,KAAK,EAAE;AAAEe,MAAAA,UAAU,EAAE;AAAd,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,mBAAmB,EAAE,CAAC,GAAD,CAFvB;AAGE,IAAA,eAAe,EAAE,CAAC,MAAD,CAHnB;AAIE,IAAA,KAAK,EAAE;AAAEjB,MAAAA,MAAM,EAAE,MAAV;AAAkBkB,MAAAA,WAAW,EAAE;AAA/B,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGhC,QAAQ,CAACiC,GAAT,CAAa,CAACC,OAAD,EAAoBC,YAApB,KACZ,MAAC,OAAD;AACE,IAAA,GAAG,EAAEA,YADP;AAEE,IAAA,KAAK,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,IAAI,EAAED,OAAO,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGF,OAAO,CAACnB,KAFX,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGmB,OAAO,CAACG,SAAR,CAAkBJ,GAAlB,CAAsB,CAACK,IAAD,EAAkBC,SAAlB,KACrB,YAAM,IAAN;AACE,IAAA,GAAG,EAAG,GAAEJ,YAAa,IAAGI,SAAU,EADpC;AAEE,IAAA,OAAO,EAAE,MAAYX,SAAS,CAACU,IAAI,CAACvB,KAAN,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGuB,IAAI,CAACvB,KAJR,CADD,CATH,CADD,CANH,CADF,CADF,EA8BE,MAAC,WAAD;AAAa,IAAA,OAAO,EAAEb,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,gBAAgB,EAAE,IADpB;AAEE,IAAA,KAAK,EAAEM,KAFT;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA9BF,CADF,CADF;AA0CD,CA7FD;;AA+FA,eAAeF,SAAf","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport { Layout, Menu, Icon } from \"antd\";\nimport DefaultLayout from \"~/layouts/default\";\nimport { NextPage } from \"next\";\nimport { TMenuItem, TSubMenu } from \"~/interfaces/menu\";\nimport subMenus from \"~/data/subMenus\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\nimport DnDContainer from \"~/components/DnDContainer\";\nimport update from \"immutability-helper\";\nimport Button from \"@material-ui/core/Button\";\n\nconst { SubMenu } = Menu;\nconst { Sider } = Layout;\n\nexport type TBox = {\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  title: string;\n  jsx: JSX.Element; // TODO 直す！！！！！！\n};\n\nexport type IndexPageState = {\n  boxes: {\n    [key: string]: TBox;\n  };\n};\n\nconst IndexPage: NextPage = () => {\n  const [boxes, setBoxes] = useState<{\n    [key: string]: TBox;\n  }>({\n    a: {\n      top: 20,\n      left: 80,\n      width: 100,\n      height: 50,\n      title: \"Drag me around\",\n      jsx: <button>hogehoeg</button>\n    },\n    b: {\n      top: 180,\n      left: 20,\n      width: 130,\n      height: 50,\n      title: \"Drag me too\",\n      jsx: <h2>fugafuga</h2>\n    }\n  });\n\n  const makeId = (length: number): string => {\n    let result = \"\";\n    const characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n\n  const addDnDBox = (title: string): void => {\n    const key = makeId(5);\n    setBoxes(\n      update(boxes, {\n        $merge: {\n          [key]: {\n            top: 180,\n            left: 20,\n            width: 120,\n            height: 30,\n            title,\n            jsx: <h3>hogehoge</h3>\n          }\n        }\n      })\n    );\n  };\n\n  return (\n    <DefaultLayout>\n      <Layout>\n        <Sider width={200} style={{ background: \"#fff\" }}>\n          <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={[\"1\"]}\n            defaultOpenKeys={[\"sub1\"]}\n            style={{ height: \"100%\", borderRight: 0 }}\n          >\n            {subMenus.map((subMenu: TSubMenu, subMenuIndex: number) => (\n              <SubMenu\n                key={subMenuIndex}\n                title={\n                  <span>\n                    <Icon type={subMenu.iconType} />\n                    {subMenu.title}\n                  </span>\n                }\n              >\n                {subMenu.menuItems.map((item: TMenuItem, itemIndex: number) => (\n                  <Menu.Item\n                    key={`${subMenuIndex}-${itemIndex}`}\n                    onClick={(): void => addDnDBox(item.title)}\n                  >\n                    {item.title}\n                  </Menu.Item>\n                ))}\n              </SubMenu>\n            ))}\n          </Menu>\n        </Sider>\n        <DndProvider backend={Backend}>\n          <DnDContainer\n            hideSourceOnDrag={true}\n            boxes={boxes}\n            setBoxes={setBoxes}\n          />\n        </DndProvider>\n      </Layout>\n    </DefaultLayout>\n  );\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}