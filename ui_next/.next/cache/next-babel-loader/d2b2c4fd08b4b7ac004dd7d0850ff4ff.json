{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/components/DnDContainer.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { DropTarget } from \"react-dnd\";\nimport dnDItemTypes from \"~/data/dnDItemTypes\";\nimport DnDBox from \"./DndBox\";\nimport update from \"immutability-helper\";\nimport \"./dnd_container.less\"; // const styles: React.CSSProperties = {\n//   height: \"100%\",\n//   border: \"1px solid black\",\n//   position: \"relative\"\n// };\n\nclass DnDContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      boxes: {\n        a: {\n          top: 20,\n          left: 80,\n          title: \"Drag me around\"\n        },\n        b: {\n          top: 180,\n          left: 20,\n          title: \"Drag me too\"\n        }\n      }\n    });\n  }\n\n  render() {\n    const {\n      hideSourceOnDrag,\n      connectDropTarget\n    } = this.props;\n    const {\n      boxes\n    } = this.state;\n    return connectDropTarget(__jsx(\"div\", {\n      className: \"dnd_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, _Object$keys(boxes).map(key => {\n      const {\n        left,\n        top,\n        title\n      } = boxes[key];\n      return __jsx(DnDBox, {\n        key: key,\n        id: key,\n        left: left,\n        top: top,\n        hideSourceOnDrag: hideSourceOnDrag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, title);\n    })));\n  }\n\n  moveBox(id, left, top) {\n    this.setState(update(this.state, {\n      boxes: {\n        [id]: {\n          $merge: {\n            left,\n            top\n          }\n        }\n      }\n    }));\n  }\n\n}\n\nexport default DropTarget(dnDItemTypes.BOX, {\n  drop(props, monitor, component) {\n    if (!component) {\n      return;\n    }\n\n    const item = monitor.getItem();\n    const delta = monitor.getDifferenceFromInitialOffset();\n    const left = Math.round(item.left + delta.x);\n    const top = Math.round(item.top + delta.y);\n    component.moveBox(item.id, left, top);\n  }\n\n}, connect => ({\n  connectDropTarget: connect.dropTarget()\n}))(DnDContainer);","map":{"version":3,"sources":["/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/components/DnDContainer.tsx"],"names":["React","DropTarget","dnDItemTypes","DnDBox","update","DnDContainer","Component","boxes","a","top","left","title","b","render","hideSourceOnDrag","connectDropTarget","props","state","map","key","moveBox","id","setState","$merge","BOX","drop","monitor","component","item","getItem","delta","getDifferenceFromInitialOffset","Math","round","x","y","connect","dropTarget"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,sBAAP,C,CAEA;AACA;AACA;AACA;AACA;;AAWA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2E;AAAA;AAAA;;AAAA,mCAC1C;AAC7BC,MAAAA,KAAK,EAAE;AACLC,QAAAA,CAAC,EAAE;AAAEC,UAAAA,GAAG,EAAE,EAAP;AAAWC,UAAAA,IAAI,EAAE,EAAjB;AAAqBC,UAAAA,KAAK,EAAE;AAA5B,SADE;AAELC,QAAAA,CAAC,EAAE;AAAEH,UAAAA,GAAG,EAAE,GAAP;AAAYC,UAAAA,IAAI,EAAE,EAAlB;AAAsBC,UAAAA,KAAK,EAAE;AAA7B;AAFE;AADsB,KAD0C;AAAA;;AAQlEE,EAAAA,MAAP,GAAgB;AACd,UAAM;AAAEC,MAAAA,gBAAF;AAAoBC,MAAAA;AAApB,QAA0C,KAAKC,KAArD;AACA,UAAM;AAAET,MAAAA;AAAF,QAAY,KAAKU,KAAvB;AAEA,WAAOF,iBAAiB,CACtB;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,aAAYR,KAAZ,EAAmBW,GAAnB,CAAuBC,GAAG,IAAI;AAC7B,YAAM;AAAET,QAAAA,IAAF;AAAQD,QAAAA,GAAR;AAAaE,QAAAA;AAAb,UAAuBJ,KAAK,CAACY,GAAD,CAAlC;AACA,aACE,MAAC,MAAD;AACE,QAAA,GAAG,EAAEA,GADP;AAEE,QAAA,EAAE,EAAEA,GAFN;AAGE,QAAA,IAAI,EAAET,IAHR;AAIE,QAAA,GAAG,EAAED,GAJP;AAKE,QAAA,gBAAgB,EAAEK,gBALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGH,KAPH,CADF;AAWD,KAbA,CADH,CADsB,CAAxB;AAkBD;;AAEMS,EAAAA,OAAP,CAAeC,EAAf,EAA2BX,IAA3B,EAAyCD,GAAzC,EAAsD;AACpD,SAAKa,QAAL,CACElB,MAAM,CAAC,KAAKa,KAAN,EAAa;AACjBV,MAAAA,KAAK,EAAE;AACL,SAACc,EAAD,GAAM;AACJE,UAAAA,MAAM,EAAE;AAAEb,YAAAA,IAAF;AAAQD,YAAAA;AAAR;AADJ;AADD;AADU,KAAb,CADR;AASD;;AA1CwE;;AA6C3E,eAAeR,UAAU,CACvBC,YAAY,CAACsB,GADU,EAEvB;AACEC,EAAAA,IAAI,CACFT,KADE,EAEFU,OAFE,EAGFC,SAHE,EAIF;AACA,QAAI,CAACA,SAAL,EAAgB;AACd;AACD;;AACD,UAAMC,IAAI,GAAGF,OAAO,CAACG,OAAR,EAAb;AACA,UAAMC,KAAK,GAAGJ,OAAO,CAACK,8BAAR,EAAd;AACA,UAAMrB,IAAI,GAAGsB,IAAI,CAACC,KAAL,CAAWL,IAAI,CAAClB,IAAL,GAAYoB,KAAK,CAACI,CAA7B,CAAb;AACA,UAAMzB,GAAG,GAAGuB,IAAI,CAACC,KAAL,CAAWL,IAAI,CAACnB,GAAL,GAAWqB,KAAK,CAACK,CAA5B,CAAZ;AAEAR,IAAAA,SAAS,CAACP,OAAV,CAAkBQ,IAAI,CAACP,EAAvB,EAA2BX,IAA3B,EAAiCD,GAAjC;AACD;;AAfH,CAFuB,EAmBtB2B,OAAD,KAAmB;AACjBrB,EAAAA,iBAAiB,EAAEqB,OAAO,CAACC,UAAR;AADF,CAAnB,CAnBuB,CAAV,CAsBbhC,YAtBa,CAAf","sourcesContent":["import React from \"react\";\nimport { ConnectDropTarget, DropTargetMonitor, XYCoord } from \"react-dnd\";\nimport { DropTarget } from \"react-dnd\";\nimport dnDItemTypes from \"~/data/dnDItemTypes\";\nimport DnDBox from \"./DndBox\";\nimport update from \"immutability-helper\";\nimport \"./dnd_container.less\";\n\n// const styles: React.CSSProperties = {\n//   height: \"100%\",\n//   border: \"1px solid black\",\n//   position: \"relative\"\n// };\n\nexport interface ContainerProps {\n  hideSourceOnDrag: boolean;\n  connectDropTarget: ConnectDropTarget;\n}\n\nexport interface ContainerState {\n  boxes: { [key: string]: { top: number; left: number; title: string } };\n}\n\nclass DnDContainer extends React.Component<ContainerProps, ContainerState> {\n  public state: ContainerState = {\n    boxes: {\n      a: { top: 20, left: 80, title: \"Drag me around\" },\n      b: { top: 180, left: 20, title: \"Drag me too\" }\n    }\n  };\n\n  public render() {\n    const { hideSourceOnDrag, connectDropTarget } = this.props;\n    const { boxes } = this.state;\n\n    return connectDropTarget(\n      <div className=\"dnd_container\">\n        {Object.keys(boxes).map(key => {\n          const { left, top, title } = boxes[key];\n          return (\n            <DnDBox\n              key={key}\n              id={key}\n              left={left}\n              top={top}\n              hideSourceOnDrag={hideSourceOnDrag}\n            >\n              {title}\n            </DnDBox>\n          );\n        })}\n      </div>\n    );\n  }\n\n  public moveBox(id: string, left: number, top: number) {\n    this.setState(\n      update(this.state, {\n        boxes: {\n          [id]: {\n            $merge: { left, top }\n          }\n        }\n      })\n    );\n  }\n}\n\nexport default DropTarget(\n  dnDItemTypes.BOX,\n  {\n    drop(\n      props: ContainerProps,\n      monitor: DropTargetMonitor,\n      component: DnDContainer | null\n    ) {\n      if (!component) {\n        return;\n      }\n      const item = monitor.getItem();\n      const delta = monitor.getDifferenceFromInitialOffset() as XYCoord;\n      const left = Math.round(item.left + delta.x);\n      const top = Math.round(item.top + delta.y);\n\n      component.moveBox(item.id, left, top);\n    }\n  },\n  (connect: any) => ({\n    connectDropTarget: connect.dropTarget()\n  })\n)(DnDContainer);\n"]},"metadata":{},"sourceType":"module"}