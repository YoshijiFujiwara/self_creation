{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/components/DnDContainer.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport DnDBox from \"./DnDBox\";\nimport \"./dnd_container.less\";\nimport update from \"immutability-helper\";\nimport { useDrop } from \"react-dnd\";\nimport dndItemTypes from \"~/data/dndItemTypes\";\n\nvar DndContainer = function DndContainer(_ref) {\n  var hideSourceOnDrag = _ref.hideSourceOnDrag,\n      boxes = _ref.boxes,\n      setBoxes = _ref.setBoxes;\n\n  var moveBox = function moveBox(id, left, top) {\n    setBoxes(update(boxes, _defineProperty({}, id, {\n      $merge: {\n        left: left,\n        top: top\n      }\n    })));\n  };\n\n  var _useDrop = useDrop({\n    accept: dndItemTypes.BOX,\n    drop: function drop(item, monitor) {\n      var delta = monitor.getDifferenceFromInitialOffset();\n      var left = Math.round(item.left + delta.x);\n      var top = Math.round(item.top + delta.y);\n      moveBox(item.id, left, top);\n      return undefined;\n    }\n  }),\n      _useDrop2 = _slicedToArray(_useDrop, 2),\n      drop = _useDrop2[1];\n\n  return __jsx(\"div\", {\n    ref: drop,\n    className: \"dnd_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, _Object$keys(boxes).map(function (key) {\n    var _boxes$key = boxes[key],\n        left = _boxes$key.left,\n        top = _boxes$key.top,\n        width = _boxes$key.width,\n        height = _boxes$key.height,\n        title = _boxes$key.title;\n    return __jsx(DnDBox, {\n      key: key,\n      id: key,\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      hideSourceOnDrag: hideSourceOnDrag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, title);\n  }));\n};\n\nexport default DndContainer;","map":{"version":3,"sources":["/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/components/DnDContainer.tsx"],"names":["React","DnDBox","update","useDrop","dndItemTypes","DndContainer","hideSourceOnDrag","boxes","setBoxes","moveBox","id","left","top","$merge","accept","BOX","drop","item","monitor","delta","getDifferenceFromInitialOffset","Math","round","x","y","undefined","map","key","width","height","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,sBAAP;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,OAAT,QAAiC,WAAjC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AASA,IAAMC,YAAsC,GAAG,SAAzCA,YAAyC,OAIzC;AAAA,MAHJC,gBAGI,QAHJA,gBAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADJC,QACI,QADJA,QACI;;AACJ,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAaC,IAAb,EAA2BC,GAA3B,EAA2C;AACzDJ,IAAAA,QAAQ,CACNN,MAAM,CAACK,KAAD,sBACHG,EADG,EACE;AACJG,MAAAA,MAAM,EAAE;AAAEF,QAAAA,IAAI,EAAJA,IAAF;AAAQC,QAAAA,GAAG,EAAHA;AAAR;AADJ,KADF,EADA,CAAR;AAOD,GARD;;AADI,iBAWaT,OAAO,CAAC;AACvBW,IAAAA,MAAM,EAAEV,YAAY,CAACW,GADE;AAEvBC,IAAAA,IAFuB,gBAElBC,IAFkB,EAEFC,OAFE,EAEO;AAC5B,UAAMC,KAAK,GAAGD,OAAO,CAACE,8BAAR,EAAd;AACA,UAAMT,IAAI,GAAGU,IAAI,CAACC,KAAL,CAAWL,IAAI,CAACN,IAAL,GAAYQ,KAAK,CAACI,CAA7B,CAAb;AACA,UAAMX,GAAG,GAAGS,IAAI,CAACC,KAAL,CAAWL,IAAI,CAACL,GAAL,GAAWO,KAAK,CAACK,CAA5B,CAAZ;AACAf,MAAAA,OAAO,CAACQ,IAAI,CAACP,EAAN,EAAUC,IAAV,EAAgBC,GAAhB,CAAP;AACA,aAAOa,SAAP;AACD;AARsB,GAAD,CAXpB;AAAA;AAAA,MAWKT,IAXL;;AAsBJ,SACE;AAAK,IAAA,GAAG,EAAEA,IAAV;AAAgB,IAAA,SAAS,EAAC,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,aAAYT,KAAZ,EAAmBmB,GAAnB,CAAuB,UAAAC,GAAG,EAAI;AAAA,qBACepB,KAAK,CAACoB,GAAD,CADpB;AAAA,QACrBhB,IADqB,cACrBA,IADqB;AAAA,QACfC,GADe,cACfA,GADe;AAAA,QACVgB,KADU,cACVA,KADU;AAAA,QACHC,MADG,cACHA,MADG;AAAA,QACKC,KADL,cACKA,KADL;AAE7B,WACE,MAAC,MAAD;AACE,MAAA,GAAG,EAAEH,GADP;AAEE,MAAA,EAAE,EAAEA,GAFN;AAGE,MAAA,IAAI,EAAEhB,IAHR;AAIE,MAAA,GAAG,EAAEC,GAJP;AAKE,MAAA,KAAK,EAAEgB,KALT;AAME,MAAA,MAAM,EAAEC,MANV;AAOE,MAAA,gBAAgB,EAAEvB,gBAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASGwB,KATH,CADF;AAaD,GAfA,CADH,CADF;AAoBD,CA9CD;;AAgDA,eAAezB,YAAf","sourcesContent":["import React from \"react\";\nimport DnDBox from \"./DnDBox\";\nimport \"./dnd_container.less\";\nimport { IndexPageState } from \"~/pages/index\";\nimport update from \"immutability-helper\";\nimport { useDrop, XYCoord } from \"react-dnd\";\nimport dndItemTypes from \"~/data/dndItemTypes\";\nimport { DragItem } from \"~/interfaces/drag_item\";\n\nexport type ContainerProps = {\n  hideSourceOnDrag: boolean;\n  boxes: IndexPageState[\"boxes\"];\n  setBoxes: Function;\n};\n\nconst DndContainer: React.FC<ContainerProps> = ({\n  hideSourceOnDrag,\n  boxes,\n  setBoxes\n}) => {\n  const moveBox = (id: string, left: number, top: number) => {\n    setBoxes(\n      update(boxes, {\n        [id]: {\n          $merge: { left, top }\n        }\n      })\n    );\n  };\n\n  const [, drop] = useDrop({\n    accept: dndItemTypes.BOX,\n    drop(item: DragItem, monitor) {\n      const delta = monitor.getDifferenceFromInitialOffset() as XYCoord;\n      const left = Math.round(item.left + delta.x);\n      const top = Math.round(item.top + delta.y);\n      moveBox(item.id, left, top);\n      return undefined;\n    }\n  });\n\n  return (\n    <div ref={drop} className=\"dnd_container\">\n      {Object.keys(boxes).map(key => {\n        const { left, top, width, height, title } = boxes[key];\n        return (\n          <DnDBox\n            key={key}\n            id={key}\n            left={left}\n            top={top}\n            width={width}\n            height={height}\n            hideSourceOnDrag={hideSourceOnDrag}\n          >\n            {title}\n          </DnDBox>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default DndContainer;\n"]},"metadata":{},"sourceType":"module"}