{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/components/Box.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { DragSource } from \"react-dnd\";\nimport DnDItemTypes from \"./DnDItemTypes\";\nconst style = {\n  position: \"absolute\",\n  border: \"1px dashed gray\",\n  backgroundColor: \"white\",\n  padding: \"0.5rem 1rem\",\n  cursor: \"move\"\n};\n\nconst Box = ({\n  hideSourceOnDrag,\n  left,\n  top,\n  connectDragSource,\n  isDragging,\n  children\n}) => {\n  if (isDragging && hideSourceOnDrag) {\n    return null;\n  }\n\n  return connectDragSource(__jsx(\"div\", {\n    style: _objectSpread({}, style, {\n      left,\n      top\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, children));\n};\n\nexport default DragSource(DnDItemTypes.BOX, {\n  beginDrag(props) {\n    const {\n      id,\n      left,\n      top\n    } = props;\n    return {\n      id,\n      left,\n      top\n    };\n  }\n\n}, (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging()\n}))(Box);","map":{"version":3,"sources":["/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/components/Box.tsx"],"names":["React","DragSource","DnDItemTypes","style","position","border","backgroundColor","padding","cursor","Box","hideSourceOnDrag","left","top","connectDragSource","isDragging","children","BOX","beginDrag","props","id","connect","monitor","dragSource"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,KAA0B,GAAG;AACjCC,EAAAA,QAAQ,EAAE,UADuB;AAEjCC,EAAAA,MAAM,EAAE,iBAFyB;AAGjCC,EAAAA,eAAe,EAAE,OAHgB;AAIjCC,EAAAA,OAAO,EAAE,aAJwB;AAKjCC,EAAAA,MAAM,EAAE;AALyB,CAAnC;;AAmBA,MAAMC,GAAuB,GAAG,CAAC;AAC/BC,EAAAA,gBAD+B;AAE/BC,EAAAA,IAF+B;AAG/BC,EAAAA,GAH+B;AAI/BC,EAAAA,iBAJ+B;AAK/BC,EAAAA,UAL+B;AAM/BC,EAAAA;AAN+B,CAAD,KAO1B;AACJ,MAAID,UAAU,IAAIJ,gBAAlB,EAAoC;AAClC,WAAO,IAAP;AACD;;AAED,SAAOG,iBAAiB,CACtB;AAAK,IAAA,KAAK,oBAAOV,KAAP;AAAcQ,MAAAA,IAAd;AAAoBC,MAAAA;AAApB,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCG,QAAtC,CADsB,CAAxB;AAGD,CAfD;;AAiBA,eAAed,UAAU,CACvBC,YAAY,CAACc,GADU,EAEvB;AACEC,EAAAA,SAAS,CAACC,KAAD,EAAkB;AACzB,UAAM;AAAEC,MAAAA,EAAF;AAAMR,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,QAAoBM,KAA1B;AACA,WAAO;AAAEC,MAAAA,EAAF;AAAMR,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,KAAP;AACD;;AAJH,CAFuB,EAQvB,CAACQ,OAAD,EAAUC,OAAV,MAAuB;AACrBR,EAAAA,iBAAiB,EAAEO,OAAO,CAACE,UAAR,EADE;AAErBR,EAAAA,UAAU,EAAEO,OAAO,CAACP,UAAR;AAFS,CAAvB,CARuB,CAAV,CAYbL,GAZa,CAAf","sourcesContent":["import React from \"react\";\nimport { ConnectDragSource } from \"react-dnd\";\nimport { DragSource } from \"react-dnd\";\nimport DnDItemTypes from \"./DnDItemTypes\";\n\nconst style: React.CSSProperties = {\n  position: \"absolute\",\n  border: \"1px dashed gray\",\n  backgroundColor: \"white\",\n  padding: \"0.5rem 1rem\",\n  cursor: \"move\"\n};\n\nexport interface BoxProps {\n  id: any;\n  left: number;\n  top: number;\n  hideSourceOnDrag?: boolean;\n\n  // Collected Props\n  connectDragSource: ConnectDragSource;\n  isDragging?: boolean;\n}\n\nconst Box: React.FC<BoxProps> = ({\n  hideSourceOnDrag,\n  left,\n  top,\n  connectDragSource,\n  isDragging,\n  children\n}) => {\n  if (isDragging && hideSourceOnDrag) {\n    return null;\n  }\n\n  return connectDragSource(\n    <div style={{ ...style, left, top }}>{children}</div>\n  );\n};\n\nexport default DragSource(\n  DnDItemTypes.BOX,\n  {\n    beginDrag(props: BoxProps) {\n      const { id, left, top } = props;\n      return { id, left, top };\n    }\n  },\n  (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  })\n)(Box);\n"]},"metadata":{},"sourceType":"module"}