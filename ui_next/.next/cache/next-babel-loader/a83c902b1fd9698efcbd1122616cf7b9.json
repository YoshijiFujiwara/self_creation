{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\nvar _jsxFileName = \"/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/pages/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\nimport DnDContainer from \"~/components/DnDContainer\";\nimport LeftSider from \"~/components/LeftSider\";\nimport RightSider from \"~/components/RightSider\";\nimport componentGroups from \"~/data/materialComponents\";\nimport DefaultLayout from \"~/layouts/default\";\nvar SubMenu = _Menu.SubMenu;\nvar Sider = _Layout.Sider;\n\nvar IndexPage = function IndexPage() {\n  var _useState = useState(\"\"),\n      selectedKey = _useState[0],\n      setSelectedKey = _useState[1];\n\n  var _useState2 = useState({}),\n      boxes = _useState2[0],\n      setBoxes = _useState2[1];\n\n  var selectedComponentProps = boxes[selectedKey] && boxes[selectedKey].jsx ? boxes[selectedKey].jsx.props : [];\n\n  var addDnDBox = function addDnDBox(jsx) {\n    var key = makeId(5);\n    setBoxes(update(boxes, {\n      // TODO: この部分、型指定が出来ないの、よろしくないのでは？\n      $merge: _defineProperty({}, key, {\n        top: 180,\n        left: 20,\n        jsx: jsx,\n        componentName: \"Button\",\n        onClick: function onClick() {\n          return setSelectedKey(key);\n        }\n      })\n    }));\n  };\n\n  var updateBoxProps = function updateBoxProps(propName, value) {\n    if (selectedKey === \"\" || !boxes[selectedKey].jsx) return;\n    var box = boxes[selectedKey];\n\n    var newJsx = _objectSpread({}, box.jsx, {\n      props: _objectSpread({}, box.jsx.props, _defineProperty({}, propName, value))\n    });\n\n    setBoxes(update(boxes, {\n      $merge: _defineProperty({}, selectedKey, _objectSpread({}, box, {\n        jsx: newJsx\n      }))\n    }));\n  };\n\n  console.log(\"selected key = \", selectedKey);\n\n  var saveBoxes = function saveBoxes() {\n    console.log(\"save boxes\");\n    axios.put(\"http://localhost:3456/save_boxes\", boxes).then(function (res) {\n      console.log(res);\n    })[\"catch\"](function (e) {\n      console.error(e);\n    });\n  };\n\n  return __jsx(DefaultLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(_Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(LeftSider, {\n    subMenus: componentGroups,\n    selectMenu: addDnDBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), __jsx(DndProvider, {\n    backend: Backend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(DnDContainer, {\n    hideSourceOnDrag: true,\n    boxes: boxes,\n    setBoxes: setBoxes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), __jsx(RightSider, {\n    menuItems: selectedComponentProps,\n    onChange: updateBoxProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), __jsx(\"button\", {\n    onClick: function onClick() {\n      return saveBoxes();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"\\u30C6\\u30B9\\u30C8\\u7528\\u306E\\u4FDD\\u5B58\\u30DC\\u30BF\\u30F3\"));\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/pages/index.tsx"],"names":["axios","update","React","useState","DndProvider","Backend","DnDContainer","LeftSider","RightSider","componentGroups","DefaultLayout","SubMenu","Sider","IndexPage","selectedKey","setSelectedKey","boxes","setBoxes","selectedComponentProps","jsx","props","addDnDBox","key","makeId","$merge","top","left","componentName","onClick","updateBoxProps","propName","value","box","newJsx","console","log","saveBoxes","put","then","res","e","error"],"mappings":"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","sourcesContent":["import { JSXElement } from \"@babel/types\";\nimport MaterialButton from \"@material-ui/core/Button\";\nimport { Layout, Menu, Icon } from \"antd\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { NextPage } from \"next\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { Dispatch } from \"react\";\nimport { SetStateAction } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\nimport DnDContainer from \"~/components/DnDContainer\";\nimport LeftSider from \"~/components/LeftSider\";\nimport RightSider from \"~/components/RightSider\";\nimport componentGroups from \"~/data/materialComponents\";\nimport { TComponent, TProp } from \"~/interfaces/menu\";\nimport DefaultLayout from \"~/layouts/default\";\n\nconst { SubMenu } = Menu;\nconst { Sider } = Layout;\n\nexport type TBox = {\n  top: number;\n  left: number;\n  jsx: JSX.Element;\n  componentName: TComponent[\"title\"];\n  onClick: Dispatch<SetStateAction<string>>;\n};\nexport type TBoxes = {\n  [key: string]: TBox;\n};\nexport type IndexPageState = {\n  boxes: TBoxes;\n};\n\nconst IndexPage: NextPage = () => {\n  const [selectedKey, setSelectedKey] = useState<string>(\"\");\n\n  const [boxes, setBoxes]: [\n    TBoxes,\n    Dispatch<SetStateAction<TBoxes>>\n  ] = useState<TBoxes>({});\n\n  const selectedComponentProps =\n    boxes[selectedKey] && boxes[selectedKey].jsx\n      ? boxes[selectedKey].jsx.props\n      : [];\n\n  const addDnDBox = (jsx: JSX.Element | undefined): void => {\n    const key = makeId(5);\n    setBoxes(\n      update(boxes, {\n        // TODO: この部分、型指定が出来ないの、よろしくないのでは？\n        $merge: {\n          [key]: {\n            top: 180,\n            left: 20,\n            jsx: jsx,\n            componentName: \"Button\",\n            onClick: () => setSelectedKey(key)\n          }\n        }\n      })\n    );\n  };\n\n  const updateBoxProps = (propName: string, value: any) => {\n    if (selectedKey === \"\" || !boxes[selectedKey].jsx) return;\n    const box = boxes[selectedKey];\n    const newJsx = {\n      ...box.jsx,\n      props: {\n        ...box.jsx.props,\n        [propName]: value\n      }\n    };\n    setBoxes(\n      update(boxes, {\n        $merge: {\n          [selectedKey]: {\n            ...box,\n            jsx: newJsx\n          }\n        }\n      })\n    );\n  };\n\n  console.log(\"selected key = \", selectedKey);\n\n  const saveBoxes = () => {\n    console.log(\"save boxes\");\n    axios\n      .put(\"http://localhost:3456/save_boxes\", boxes)\n      .then(res => {\n        console.log(res);\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  };\n\n  return (\n    <DefaultLayout>\n      <Layout>\n        <LeftSider subMenus={componentGroups} selectMenu={addDnDBox} />\n        <DndProvider backend={Backend}>\n          <DnDContainer\n            hideSourceOnDrag={true}\n            boxes={boxes}\n            setBoxes={setBoxes}\n          />\n        </DndProvider>\n        <RightSider\n          menuItems={selectedComponentProps}\n          onChange={updateBoxProps}\n        />\n      </Layout>\n      <button onClick={() => saveBoxes()}>テスト用の保存ボタン</button>\n    </DefaultLayout>\n  );\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}