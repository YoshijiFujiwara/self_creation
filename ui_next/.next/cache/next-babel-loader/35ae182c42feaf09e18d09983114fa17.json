{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/components/DnDContainer.tsx\";\nvar __jsx = React.createElement;\nimport update from \"immutability-helper\";\nimport React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport DnDBox from \"~/components/DnDBox\";\nimport \"~/components/dnd_container.less\";\nimport dndItemTypes from \"~/data/dndItemTypes\";\n\nconst DndContainer = ({\n  hideSourceOnDrag,\n  boxes,\n  setBoxes\n}) => {\n  const moveBox = (id, left, top) => {\n    setBoxes(update(boxes, {\n      [id]: {\n        $merge: {\n          left,\n          top\n        }\n      }\n    }));\n  };\n\n  const [, drop] = useDrop({\n    accept: dndItemTypes.BOX,\n\n    drop(item, monitor) {\n      const delta = monitor.getDifferenceFromInitialOffset();\n      const left = Math.round(item.left + delta.x);\n      const top = Math.round(item.top + delta.y);\n      moveBox(item.id, left, top);\n      return undefined;\n    }\n\n  });\n  return __jsx(\"div\", {\n    ref: drop,\n    className: \"dnd_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, _Object$keys(boxes).map(key => {\n    const {\n      left,\n      top,\n      jsx,\n      onClick\n    } = boxes[key];\n    return __jsx(DnDBox, {\n      key: key,\n      id: key,\n      left: left,\n      top: top,\n      hideSourceOnDrag: hideSourceOnDrag,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, jsx);\n  }));\n};\n\nexport default DndContainer;","map":{"version":3,"sources":["/Users/yoshiji/webdev/javascript/self_creation/ui_next/src/components/DnDContainer.tsx"],"names":["update","React","useDrop","DnDBox","dndItemTypes","DndContainer","hideSourceOnDrag","boxes","setBoxes","moveBox","id","left","top","$merge","drop","accept","BOX","item","monitor","delta","getDifferenceFromInitialOffset","Math","round","x","y","undefined","map","key","jsx","onClick"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAgD,OAAhD;AACA,SAASC,OAAT,QAAiC,WAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,iCAAP;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AAUA,MAAMC,YAAsC,GAAG,CAAC;AAC9CC,EAAAA,gBAD8C;AAE9CC,EAAAA,KAF8C;AAG9CC,EAAAA;AAH8C,CAAD,KAIzC;AACJ,QAAMC,OAAO,GAAG,CAACC,EAAD,EAAaC,IAAb,EAA2BC,GAA3B,KAA2C;AACzDJ,IAAAA,QAAQ,CACNR,MAAM,CAACO,KAAD,EAAQ;AACZ,OAACG,EAAD,GAAM;AACJG,QAAAA,MAAM,EAAE;AAAEF,UAAAA,IAAF;AAAQC,UAAAA;AAAR;AADJ;AADM,KAAR,CADA,CAAR;AAOD,GARD;;AAUA,QAAM,GAAGE,IAAH,IAAWZ,OAAO,CAAC;AACvBa,IAAAA,MAAM,EAAEX,YAAY,CAACY,GADE;;AAEvBF,IAAAA,IAAI,CAACG,IAAD,EAAiBC,OAAjB,EAA0B;AAC5B,YAAMC,KAAK,GAAGD,OAAO,CAACE,8BAAR,EAAd;AACA,YAAMT,IAAI,GAAGU,IAAI,CAACC,KAAL,CAAWL,IAAI,CAACN,IAAL,GAAYQ,KAAK,CAACI,CAA7B,CAAb;AACA,YAAMX,GAAG,GAAGS,IAAI,CAACC,KAAL,CAAWL,IAAI,CAACL,GAAL,GAAWO,KAAK,CAACK,CAA5B,CAAZ;AACAf,MAAAA,OAAO,CAACQ,IAAI,CAACP,EAAN,EAAUC,IAAV,EAAgBC,GAAhB,CAAP;AACA,aAAOa,SAAP;AACD;;AARsB,GAAD,CAAxB;AAWA,SACE;AAAK,IAAA,GAAG,EAAEX,IAAV;AAAgB,IAAA,SAAS,EAAC,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,aAAYP,KAAZ,EAAmBmB,GAAnB,CAAuBC,GAAG,IAAI;AAC7B,UAAM;AAAEhB,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAagB,MAAAA,GAAb;AAAkBC,MAAAA;AAAlB,QAA8BtB,KAAK,CAACoB,GAAD,CAAzC;AACA,WACE,MAAC,MAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,EAAE,EAAEA,GAFN;AAGE,MAAA,IAAI,EAAEhB,IAHR;AAIE,MAAA,GAAG,EAAEC,GAJP;AAKE,MAAA,gBAAgB,EAAEN,gBALpB;AAME,MAAA,OAAO,EAAEuB,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGD,GARH,CADF;AAYD,GAdA,CADH,CADF;AAmBD,CA7CD;;AA+CA,eAAevB,YAAf","sourcesContent":["import update from \"immutability-helper\";\nimport React, { Dispatch, SetStateAction } from \"react\";\nimport { useDrop, XYCoord } from \"react-dnd\";\nimport DnDBox from \"~/components/DnDBox\";\nimport \"~/components/dnd_container.less\";\nimport dndItemTypes from \"~/data/dndItemTypes\";\nimport { DragItem } from \"~/interfaces/drag_item\";\nimport { TBoxes } from \"~/pages\";\n\nexport type ContainerProps = {\n  hideSourceOnDrag: boolean;\n  boxes: TBoxes;\n  setBoxes: Dispatch<SetStateAction<TBoxes>>;\n};\n\nconst DndContainer: React.FC<ContainerProps> = ({\n  hideSourceOnDrag,\n  boxes,\n  setBoxes\n}) => {\n  const moveBox = (id: string, left: number, top: number) => {\n    setBoxes(\n      update(boxes, {\n        [id]: {\n          $merge: { left, top }\n        }\n      })\n    );\n  };\n\n  const [, drop] = useDrop({\n    accept: dndItemTypes.BOX,\n    drop(item: DragItem, monitor) {\n      const delta = monitor.getDifferenceFromInitialOffset() as XYCoord;\n      const left = Math.round(item.left + delta.x);\n      const top = Math.round(item.top + delta.y);\n      moveBox(item.id, left, top);\n      return undefined;\n    }\n  });\n\n  return (\n    <div ref={drop} className=\"dnd_container\">\n      {Object.keys(boxes).map(key => {\n        const { left, top, jsx, onClick } = boxes[key];\n        return (\n          <DnDBox\n            key={key}\n            id={key}\n            left={left}\n            top={top}\n            hideSourceOnDrag={hideSourceOnDrag}\n            onClick={onClick}\n          >\n            {jsx}\n          </DnDBox>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default DndContainer;\n"]},"metadata":{},"sourceType":"module"}