{"version":3,"file":"static/webpack/static/development/pages/index.js.95f8a4dd48e683900be9.hot-update.js","sources":["webpack:///./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport { Layout, Menu, Icon } from \"antd\";\nimport DefaultLayout from \"~/layouts/default\";\nimport { NextPage } from \"next\";\nimport { TMenuItem, TSubMenu } from \"~/interfaces/menu\";\nimport subMenus from \"~/data/subMenus\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\nimport DnDContainer from \"~/components/DnDContainer\";\n\nconst { SubMenu } = Menu;\nconst { Sider } = Layout;\n\nexport type IndexPageState = {\n  boxes: { [key: string]: { top: number; left: number; title: string } };\n};\n\nconst IndexPage: NextPage = () => {\n  const [boxes, setBoxes] = useState<{\n    [key: string]: {\n      top: number;\n      left: number;\n      title: string;\n    };\n  }>({\n    a: { top: 20, left: 80, title: \"Drag me around\" },\n    b: { top: 180, left: 20, title: \"Drag me too\" }\n  });\n\n  const makeId = (length: number): string => {\n    let result = \"\";\n    const characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n\n  const addDnDBox = (title: string): void => {\n    const key = makeId(5);\n    boxes[key] = { top: 180, left: 200, title };\n    setBoxes(boxes);\n  };\n\n  return (\n    <DefaultLayout>\n      <Layout>\n        <Sider width={200} style={{ background: \"#fff\" }}>\n          <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={[\"1\"]}\n            defaultOpenKeys={[\"sub1\"]}\n            style={{ height: \"100%\", borderRight: 0 }}\n          >\n            {subMenus.map((subMenu: TSubMenu, subMenuIndex: number) => (\n              <SubMenu\n                key={subMenuIndex}\n                title={\n                  <span>\n                    <Icon type={subMenu.iconType} />\n                    {subMenu.title}\n                  </span>\n                }\n              >\n                {subMenu.menuItems.map((item: TMenuItem, itemIndex: number) => (\n                  <Menu.Item\n                    key={`${subMenuIndex}-${itemIndex}`}\n                    onClick={(): void => addDnDBox(item.title)}\n                  >\n                    {item.title}\n                  </Menu.Item>\n                ))}\n              </SubMenu>\n            ))}\n          </Menu>\n        </Sider>\n        <DndProvider backend={Backend}>\n          <DnDContainer\n            hideSourceOnDrag={true}\n            boxes={boxes}\n            setBoxes={setBoxes}\n          />\n        </DndProvider>\n      </Layout>\n    </DefaultLayout>\n  );\n};\n\nexport default IndexPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAPA;AAAA;AACA;AAWA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAVA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;A","sourceRoot":""}