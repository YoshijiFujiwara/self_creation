{"version":3,"file":"static/webpack/static/development/pages/index.js.65f021c4c051efc58d5f.hot-update.js","sources":["webpack:///./src/pages/index.tsx"],"sourcesContent":["import { JSXElement } from \"@babel/types\";\nimport MaterialButton from \"@material-ui/core/Button\";\nimport { Layout, Menu, Icon } from \"antd\";\nimport axios from \"axios\";\nimport update from \"immutability-helper\";\nimport { NextPage } from \"next\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { Dispatch } from \"react\";\nimport { SetStateAction } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\nimport DnDContainer from \"~/components/DnDContainer\";\nimport LeftSider from \"~/components/LeftSider\";\nimport RightSider from \"~/components/RightSider\";\nimport componentGroups from \"~/data/materialComponents\";\nimport { TComponent, TProp } from \"~/interfaces/menu\";\nimport DefaultLayout from \"~/layouts/default\";\n\nconst { SubMenu } = Menu;\nconst { Sider } = Layout;\n\nexport type TBox = {\n  top: number;\n  left: number;\n  jsx: JSX.Element;\n  componentName: TComponent[\"title\"];\n  onClick: Dispatch<SetStateAction<string>>;\n};\nexport type TBoxes = {\n  [key: string]: TBox;\n};\nexport type IndexPageState = {\n  boxes: TBoxes;\n};\n\nconst makeId = (length: number): string => {\n  let result = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nconst IndexPage: NextPage = () => {\n  const [selectedKey, setSelectedKey] = useState<string>(\"\");\n\n  const [boxes, setBoxes]: [\n    TBoxes,\n    Dispatch<SetStateAction<TBoxes>>\n  ] = useState<TBoxes>({});\n\n  const selectedComponentProps =\n    boxes[selectedKey] && boxes[selectedKey].jsx\n      ? boxes[selectedKey].jsx.props\n      : [];\n\n  const addDnDBox = (jsx: JSX.Element | undefined): void => {\n    const key = makeId(5);\n    setBoxes(\n      update(boxes, {\n        // TODO: この部分、型指定が出来ないの、よろしくないのでは？\n        $merge: {\n          [key]: {\n            top: 180,\n            left: 20,\n            jsx: jsx,\n            componentName: \"Button\",\n            onClick: () => setSelectedKey(key)\n          }\n        }\n      })\n    );\n  };\n\n  const updateBoxProps = (propName: string, value: any) => {\n    if (selectedKey === \"\" || !boxes[selectedKey].jsx) return;\n    const box = boxes[selectedKey];\n    const newJsx = {\n      ...box.jsx,\n      props: {\n        ...box.jsx.props,\n        [propName]: value\n      }\n    };\n    setBoxes(\n      update(boxes, {\n        $merge: {\n          [selectedKey]: {\n            ...box,\n            jsx: newJsx\n          }\n        }\n      })\n    );\n  };\n\n  console.log(\"selected key = \", selectedKey);\n\n  const saveBoxes = () => {\n    console.log(\"save boxes\");\n    axios\n      .put(\"http://localhost:3456/save_boxes\", boxes)\n      .then(res => {\n        console.log(res);\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  };\n\n  return (\n    <DefaultLayout>\n      <Layout>\n        <LeftSider subMenus={componentGroups} selectMenu={addDnDBox} />\n        <DndProvider backend={Backend}>\n          <DnDContainer\n            hideSourceOnDrag={true}\n            boxes={boxes}\n            setBoxes={setBoxes}\n          />\n        </DndProvider>\n        <RightSider\n          menuItems={selectedComponentProps}\n          onChange={updateBoxProps}\n        />\n      </Layout>\n      <button onClick={() => saveBoxes()}>テスト用の保存ボタン</button>\n    </DefaultLayout>\n  );\n};\n\nexport default IndexPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAeA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAHA;AAaA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAFA;AACA;AAMA;AAEA;AAGA;AAHA;AADA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}