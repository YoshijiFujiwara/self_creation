c


clear
cimport '@atlaskit/css-reset';
import React from 'react';
import { DragDropContext, DropResult } from 'react-beautiful-dnd';
import ReactDOM from 'react-dom';
import Column from './Column';
import { ResultType } from './example-result';
import initialData, { InitialDataType } from './initial-data';

class App extends React.Component {
  public state: InitialDataType = initialData;

  public onDragEnd = (result: any) => {
    const { destination, source, draggableId } = result;

    if (!destination) {
      return;
    }

    if (destination.droppableId === source.droppableId && destination.index === source.index) {
      return;
    }

    const column = this.state.columns[source.droppableId];
    const newTaskIds = Array.from(column.taskIds);
    newTaskIds.splice(source.index, 1); // source.index から取り除く
    newTaskIds.splice(destination.index, 0, draggableId);

    const newColumn = {
      ...column,
      taskIds: newTaskIds,
    };

    const newState = {
      ...this.state,
      columns: {
        ...this.state.columns,
        [newColumn.id]: newColumn,
      },
    };

    this.setState(newState);
  };

  public render() {
    return (
      <DragDropContext onDragEnd={this.onDragEnd}>
        {this.state.columnOrders.map(columnId => {
          const column = this.state.columns[columnId];
          const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);

          return <Column key={column.id} column={column} tasks={tasks} />;
        })}
      </DragDropContext>
    );
  }
}

ReactDOM.render(<App />, document.getElementById('root'));
:q

dsafdsafdsafdsafdsa
